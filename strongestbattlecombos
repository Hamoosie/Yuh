-- Create Screen GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.CoreGui

-- Create Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 100, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.Text = "Toggle Menu"
toggleButton.Parent = screenGui

-- Create Draggable Menu
local menuFrame = Instance.new("Frame")
menuFrame.Size = UDim2.new(0, 200, 0, 300) -- Adjust size as needed
menuFrame.Position = UDim2.new(0, 120, 0, 10)
menuFrame.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
menuFrame.Visible = false
menuFrame.Parent = screenGui

-- Make the Menu Draggable
local dragToggle = nil
local dragInput = nil
local dragStart = nil
local startPos = nil

local function updateInput(input)
    local delta = input.Position - dragStart
    menuFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

menuFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragToggle = true
        dragStart = input.Position
        startPos = menuFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = false
            end
        end)
    end
end)

menuFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragToggle then
        updateInput(input)
    end
end)

-- Create Gouo Combo Button inside the menu
local gouoComboButton = Instance.new("TextButton")
gouoComboButton.Size = UDim2.new(0, 180, 0, 50)
gouoComboButton.Position = UDim2.new(0, 10, 0, 10) -- Positioned at the top of the menu
gouoComboButton.Text = "Gouo Combo"
gouoComboButton.Parent = menuFrame

-- Function to Execute Gouo Combo
local function executeGouoCombo()
    local args = {
        [1] = {
            ["Dash"] = Enum.KeyCode.W,
            ["Key"] = Enum.KeyCode.Q,
            ["Goal"] = "KeyPress"
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    function getNil(name,class)
        for _,v in pairs(getnilinstances())do
            if v.ClassName==class and v.Name==name then return v;end
        end
    end

    local args = {
        [1] = {
            ["Goal"] = "delete bv",
            ["BV"] = getNil("moveme", "BodyVelocity")
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))

    local args = {
        [1] = {
            ["Mobile"] = true,
            ["Goal"] = "LeftClick"
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    wait(3.4)

    local args = {
        [1] = {
            ["Goal"] = "LeftClickRelease",
            ["Mobile"] = true
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))

    local args = {
        [1] = {
            ["Goal"] = "Console Move",
            ["Tool"] = game:GetService("Players").LocalPlayer.Backpack.Uppercut
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))

    local args = {
        [1] = {
            ["Goal"] = "Auto Use End",
            ["Tool"] = game:GetService("Players").LocalPlayer.Backpack.Uppercut
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    wait(1.8)

    local args = {
        [1] = {
            ["Dash"] = Enum.KeyCode.W,
            ["Key"] = Enum.KeyCode.Q,
            ["Goal"] = "KeyPress"
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    function getNil(name,class)
        for _,v in pairs(getnilinstances())do
            if v.ClassName==class and v.Name==name then return v;end
        end
    end

    local args = {
        [1] = {
            ["Goal"] = "delete bv",
            ["BV"] = getNil("moveme", "BodyVelocity")
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))

    local args = {
        [1] = {
            ["Mobile"] = true,
            ["Goal"] = "LeftClick"
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    wait(2)

    local args = {
        [1] = {
            ["Goal"] = "LeftClickRelease",
            ["Mobile"] = true
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))

    local args = {
        [1] = {
            ["Goal"] = "Console Move",
            ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Consecutive Punches")
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))

    local args = {
        [1] = {
            ["Goal"] = "Auto Use End",
            ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Consecutive Punches")
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    wait(2)

    local args = {
        [1] = {
            ["Goal"] = "Console Move",
            ["Tool"] = game:GetService("Players").LocalPlayer.Backpack.Shove
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))

    local args = {
        [1] = {
            ["Goal"] = "Auto Use End",
            ["Tool"] = game:GetService("Players").LocalPlayer.Backpack.Shove
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    wait(1.5)

    local args = {
        [1] = {
            ["Dash"] = Enum.KeyCode.W,
            ["Key"] = Enum.KeyCode.Q,
            ["Goal"] = "KeyPress"
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    function getNil(name,class)
        for _,v in pairs(getnilinstances())do
            if v.ClassName==class and v.Name==name then return v;end
        end
    end

    local args = {
        [1] = {
            ["Goal"] = "delete bv",
            ["BV"] = getNil("moveme", "BodyVelocity")
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    wait(1)

    local args = {
        [1] = {
            ["Goal"] = "Console Move",
            ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Normal Punch")
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))

    local args = {
        [1] = {
            ["Goal"] = "Auto Use End",
            ["Tool"] = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Normal Punch")
        }
    }
    game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
end

gouoComboButton.MouseButton1Click:Connect(executeGouoCombo)

-- Toggle Menu Visibility
local menuVisible = false
toggleButton.MouseButton1Click:Connect(function()
    menuVisible = not menuVisible
    menuFrame.Visible = menuVisible
end)
