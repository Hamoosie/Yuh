-- Function to activate the combat tool
local function activateCombatTool()
    local backpack = game.Players.LocalPlayer.Backpack
    local tool = backpack:FindFirstChild("Combat")
    if tool then
        -- Equip the tool
        tool.Parent = game.Players.LocalPlayer.Character
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:EquipTool(tool)
            print("Combat tool equipped.")
        else
            print("No Humanoid found in character.")
        end
    else
        print("Combat tool not found in backpack.")
    end
end

-- Function to handle the knock action
local function knockBehindPlayer()
    if targetPlayer then
        activateCombatTool()
        knockActive = true
        while knockActive and targetPlayer do
            local character = game.Players.LocalPlayer.Character
            local targetCharacter = targetPlayer.Character

            if character and targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                -- Continuously adjust position behind the target player
                local targetPosition = targetCharacter.HumanoidRootPart.Position + targetCharacter.HumanoidRootPart.CFrame.LookVector * -0.1
                character:SetPrimaryPartCFrame(CFrame.new(targetPosition, targetCharacter.HumanoidRootPart.Position))
                wait(0.1)
                local args = {
                    [1] = "ChargeButton"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
            else
                print("Target character or HumanoidRootPart not found.")
                break
            end
        end
    else
        print("No target player set for knocking.")
    end
end

-- Function to handle chat commands
local function onChatMessage(player, message)
    local command, arg = message:match("^(%S+)%s*(.*)")

    if command == "!knock" then
        -- Execute knock command
        print(player.Name .. " wants to knock " .. arg)
        local targetPlayer = nil
        arg = arg:lower()
        
        for _, p in ipairs(game.Players:GetPlayers()) do
            if p.Name:lower():sub(1, #arg) == arg then
                targetPlayer = p
                break
            end
        end
        
        if targetPlayer then
            -- Start knocking
            if not knockActive then
                activateCombatTool()
                knockBehindPlayer()
            else
                knockActive = false
            end
        else
            print("Target player not found for knocking.")
            knockActive = false -- Stop knocking if player not found
        end

    elseif command == "!unknock" then
        -- Stop knocking
        print(player.Name .. " stopped knocking.")
        knockActive = false

    -- Other commands...

    end
end

-- Listen for PlayerAdded event
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onChatMessage(player, message)
    end)
end)

-- For players who are already in the game
for _, player in ipairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        onChatMessage(player, message)
    end)
end
